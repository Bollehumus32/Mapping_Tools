<Window x:Class="Mapping_Tools.Views.SnappingTools.SnappingToolsPreferencesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Mapping_Tools.Classes.SnappingTools"
        xmlns:components="clr-namespace:Mapping_Tools.Components.Domain"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="Snapping Tools Preferences" Height="500" Width="570" MinWidth="575" MinHeight="360"
        WindowStyle="None"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" Background="{DynamicResource MaterialDesignPaper}"
        d:DataContext="{d:DesignData SnappingToolsPreferences}">
    
    <WindowChrome.WindowChrome>
        <WindowChrome 
            CaptionHeight="35"
            ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
 
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
        <components:EnumToBoolConverter x:Key="EnumToBoolConverter" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid VerticalAlignment="Top" Grid.Row="0">
            <StackPanel WindowChrome.IsHitTestVisibleInChrome="true" Height="35" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="{materialDesign:PackIcon WindowCLose}" Click="CancelButton_Click" HorizontalAlignment="Right" Height="35" Foreground="{DynamicResource MaterialDesignBody}"/>
            </StackPanel>
        </Grid>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
            <Border Padding="10">
                <StackPanel>
                    <ItemsControl ItemsSource="{Binding RelevantObjectPreferences}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card Margin="0 0 0 5">
                                    <TreeViewItem Header="{Binding Name}" Foreground="{DynamicResource MaterialDesignBody}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox Text="{Binding Color, ElementName=ColorPicker}"
								                     Style="{StaticResource MaterialDesignFilledTextFieldTextBox}" materialDesign:HintAssist.Hint="Color HEX value"
								                     Width="120" Margin="2,0,10,2"/>
                                            <materialDesign:ColorPicker Color="{Binding Color}" x:Name="ColorPicker" Width="300"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Opacity" Width="120" VerticalAlignment="Center"/>
                                            <Slider x:Name="OpacitySlider" Width="300" TickFrequency="0.01" Orientation="Horizontal" Minimum="0" Maximum="1" Value="{Binding Opacity,  UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                            <TextBox x:Name="OpacityTextbox" Width="40" Text="{Binding ElementName=OpacitySlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Thickness" Width="120" VerticalAlignment="Center"/>
                                            <Slider x:Name="ThicknessSlider" Width="300" TickFrequency="1" Orientation="Horizontal" Minimum="1" Maximum="10" Value="{Binding Thickness, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                            <TextBox x:Name="ThicknessTextbox" Width="40" Text="{Binding ElementName=ThicknessSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="DashStyle" Width="120" VerticalAlignment="Center"/>
                                            <ComboBox x:Name="DashStyleCombobox" Width="300" Margin="11,0" ItemsSource="{Binding DashStylesEnumerable}" SelectedItem="{Binding Dashstyle}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Visibility="{Binding HasSizeOption, Converter={StaticResource VisibleIfTrueConverter}}">
                                            <TextBlock Text="Size" Width="120" VerticalAlignment="Center"/>
                                            <Slider x:Name="SizeSlider" Width="300" TickFrequency="1" Orientation="Horizontal" Minimum="1" Maximum="10" Value="{Binding Size, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                            <TextBox x:Name="SizeTextbox" Width="40" Text="{Binding ElementName=SizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                    </TreeViewItem>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Border Padding="5 10">
                        <ListBox>
                            <ListBoxItem>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="100" Margin="0 0 0 6" Text="Offset" VerticalAlignment="Bottom" ToolTip="Offsets the overlay box. Use this field when the automatic editor-to-screen coordinate conversion seems to fail."/>
                                    <TextBox Text="{Binding OffsetLeft}" Width="95" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Left offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"/>
                                    <TextBox Text="{Binding OffsetTop}" Width="95" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Top offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"/>
                                    <TextBox Text="{Binding OffsetRight}" Width="95" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Right offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"/>
                                    <TextBox Text="{Binding OffsetBottom}" Width="95" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Bottom offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
                                </StackPanel>
                            </ListBoxItem>

                            <ListBoxItem>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="100" Margin="0 0 0 6" Text="Downkey:" VerticalAlignment="Center" ToolTip="Customize what gets displayed when the Activation Key is pressed."/>
                                    <StackPanel>
                                        <RadioButton IsChecked="{Binding KeyDownViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Everything}}"
                                                     Content="Everything" ToolTip="Default behavior. Display all virtual objects when the Activation Key is pressed."/>
                                        <RadioButton IsChecked="{Binding KeyDownViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.ParentsOnly}}"
                                                     Content="Parents Only" ToolTip="Display the object the cursor is currently snapping to and its parents."/>
                                        <RadioButton IsChecked="{Binding KeyDownViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Nothing}}"
                                                     Content="Nothing" ToolTip="Do not display anything even if the Activation Key is pressed."/>
                                    </StackPanel>
                                </StackPanel>
                            </ListBoxItem>

                            <ListBoxItem>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="100" Margin="0 0 0 6" Text="Upkey:" VerticalAlignment="Center" ToolTip="Customize what gets displayed when the Activation Key is not pressed."/>
                                    <StackPanel>
                                        <RadioButton IsChecked="{Binding KeyUpViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Everything}}"
                                                     Content="Everything" ToolTip="Default behavior. Display all virtual objects even if the Activation Key is not pressed."/>
                                        <RadioButton IsChecked="{Binding KeyUpViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Nothing}}"
                                                     Content="Nothing" ToolTip="Do not display anything if the Activation Key is not pressed."/>
                                    </StackPanel>
                                </StackPanel>
                            </ListBoxItem>

                            <ListBoxItem>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="100" Margin="0 0 0 6" Text="Debug" VerticalAlignment="Center" ToolTip="Visualize boundaries of the overlay box for debugging purposes."/>
                                    <ToggleButton IsChecked="{Binding DebugEnabled}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                </StackPanel>
                            </ListBoxItem>
                        </ListBox>
                    </Border>
                </StackPanel>
            </Border>
        </ScrollViewer>


        <Border Grid.Row="2" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Width="200" materialDesign:ButtonAssist.CornerRadius="10" x:Name="ApplyButton" Content="Apply" Click="ApplyButton_Click"/>
                <Button Grid.Column="1" Width="200" materialDesign:ButtonAssist.CornerRadius="10" x:Name="CancelButton" Content="Cancel" Click="CancelButton_Click"/>
            </Grid>
        </Border>

        <Border BorderThickness="1" Grid.RowSpan="3" Background="{x:Null}" BorderBrush="{DynamicResource PrimaryHueDarkBrush}"/>

    </Grid>
    
</Window>
